{"version":3,"sources":["data sync /^/.//.*/.json$","app/navbar/Navbar.tsx","app/results/Results.tsx","data/dipartimenti.ts","app/App.tsx","serviceWorker.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Menu","className","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","target","rel","Button","icon","faGithub","Results","props","data","require","anno","path","useState","show","setShow","generateHead","onClick","toggleBody","aria-expanded","liste","l","key","nome","src","name","replace","RegExp","width","height","alt","voti_totali","preventDefault","useEffect","in","Table","striped","bordered","hover","responsive","results","forEach","eletti","lista","push","assign","eletto","non_eletti","maxRows","values","reduce","acc","prev","length","tableRows","i","nominativo","voti","generateTableRows","dipartimenti","NotFound","App","d","to","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a20fdfad.chunk.js","sourcesContent":["var map = {\n\t\"./2016-2018/Consiglio_di_amministrazione.json\": 53,\n\t\"./2016-2018/Senato.json\": 54,\n\t\"./2016-2018/dipartimenti/Agricoltura_alimentazione_e_ambiente.json\": 55,\n\t\"./2016-2018/dipartimenti/Chirurgia_generale_e_specialità_medico_chirurgiche.json\": 56,\n\t\"./2016-2018/dipartimenti/Economia_e_impresa.json\": 57,\n\t\"./2016-2018/dipartimenti/Fisica_e_astronomia.json\": 58,\n\t\"./2016-2018/dipartimenti/Giurisprudenza.json\": 59,\n\t\"./2016-2018/dipartimenti/Ingegneria_civile_e_architettura.json\": 60,\n\t\"./2016-2018/dipartimenti/Ingegneria_elettrica_elettronica_e_informatica.json\": 61,\n\t\"./2016-2018/dipartimenti/Matematica_e_informatica.json\": 62,\n\t\"./2016-2018/dipartimenti/Medicina_clinica_e_sperimentale.json\": 63,\n\t\"./2016-2018/dipartimenti/Scienze_biologiche_geologiche_e_ambientali.json\": 64,\n\t\"./2016-2018/dipartimenti/Scienze_biomediche_e_biotecnologiche.json\": 65,\n\t\"./2016-2018/dipartimenti/Scienze_chimiche.json\": 66,\n\t\"./2016-2018/dipartimenti/Scienze_del_farmaco.json\": 67,\n\t\"./2016-2018/dipartimenti/Scienze_della_formazione.json\": 68,\n\t\"./2016-2018/dipartimenti/Scienze_mediche_chirurgiche_tecn_avanzate_GF_Ingrassia.json\": 69,\n\t\"./2016-2018/dipartimenti/Scienze_politiche_e_sociali.json\": 70,\n\t\"./2016-2018/dipartimenti/Scienze_umanistiche.json\": 71,\n\t\"./2016-2018/dipartimenti/Struttura_didattica_speciale_di_architettura.json\": 72,\n\t\"./2016-2018/dipartimenti/Struttura_didattica_speciale_di_lingue_e_letterature_straniere.json\": 73,\n\t\"./2018-2020/Consiglio_di_amministrazione.json\": 74,\n\t\"./2018-2020/Senato.json\": 75,\n\t\"./2018-2020/dipartimenti/Agricoltura_alimentazione_e_ambiente.json\": 76,\n\t\"./2018-2020/dipartimenti/Chirurgia_generale_e_specialità_medico_chirurgiche.json\": 77,\n\t\"./2018-2020/dipartimenti/Economia_e_impresa.json\": 78,\n\t\"./2018-2020/dipartimenti/Fisica_e_astronomia.json\": 79,\n\t\"./2018-2020/dipartimenti/Giurisprudenza.json\": 80,\n\t\"./2018-2020/dipartimenti/Ingegneria_civile_e_architettura.json\": 81,\n\t\"./2018-2020/dipartimenti/Ingegneria_elettrica_elettronica_e_informatica.json\": 82,\n\t\"./2018-2020/dipartimenti/Matematica_e_informatica.json\": 83,\n\t\"./2018-2020/dipartimenti/Medicina_clinica_e_sperimentale.json\": 84,\n\t\"./2018-2020/dipartimenti/Scienze_biologiche_geologiche_e_ambientali.json\": 85,\n\t\"./2018-2020/dipartimenti/Scienze_biomediche_e_biotecnologiche.json\": 86,\n\t\"./2018-2020/dipartimenti/Scienze_chimiche.json\": 87,\n\t\"./2018-2020/dipartimenti/Scienze_del_farmaco.json\": 88,\n\t\"./2018-2020/dipartimenti/Scienze_della_formazione.json\": 89,\n\t\"./2018-2020/dipartimenti/Scienze_mediche_chirurgiche_tecn_avanzate_GF_Ingrassia.json\": 90,\n\t\"./2018-2020/dipartimenti/Scienze_politiche_e_sociali.json\": 91,\n\t\"./2018-2020/dipartimenti/Scienze_umanistiche.json\": 92,\n\t\"./2018-2020/dipartimenti/Struttura_didattica_speciale_di_architettura.json\": 93,\n\t\"./2018-2020/dipartimenti/Struttura_didattica_speciale_di_lingue_e_letterature_straniere.json\": 94\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 52;","import React, { FunctionComponent } from 'react';\nimport './Navbar.scss';\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Button from 'react-bootstrap/Button';\n\nconst Menu: FunctionComponent = () => {\n  return (\n\n    <div className=\"Menu\">\n      <Navbar expand=\"lg\" className=\"bg-navbar navbar-expand-lg navbar-dark bg-primary\">\n        <div className=\"container\">\n          <Navbar.Brand href=\"/senato\">UNICT Elezioni</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link href=\"/senato\">Senato</Nav.Link>\n              <Nav.Link href=\"/cda\">Consiglio di Amministrazione</Nav.Link>\n              <Nav.Link href=\"/dipartimenti\">Dipartimenti</Nav.Link>\n            </Nav>\n            <div className=\"collapse navbar-collapse\" id=\"navbarColor01\">\n             <div className=\"navbar-nav mr-auto\"></div>\n             <a href=\"https://github.com/UNICT-DMI/UNICT-elezioni\" target=\"_blank\" rel=\"noopener noreferrer\">\n               <span className=\"text-white\">GitHub</span>\n               <Button className=\"btn-empty\">\n                 <FontAwesomeIcon icon={faGithub} />\n               </Button>\n             </a>\n           </div>\n          </Navbar.Collapse>\n        </div>\n      </Navbar>\n     </div>\n  );\n}\n\nexport default Menu;\n","import React, { useEffect, useState } from 'react';\nimport './Results.scss';\nimport Collapse from 'react-bootstrap/Collapse';\nimport Table from 'react-bootstrap/Table';\n\ninterface Props {\n  anno?: string;\n  path?: string;\n}\n\nconst Results = (props: Props) => {\n  const data = require(`../../data/${props.anno}/${props.path}.json`);\n  const [show, setShow] = useState(false);\n\n  function generateTableRows(data: any): JSX.Element[] {\n\n    // init results\n    const results: { [key: string]: any[] } = {}; // any -> eletti[]\n\n    data.liste.forEach((l: any) => results[l.nome] = []);\n    data.eletti.forEach((e: any) => results[e.lista].push(Object.assign(e, { eletto: true })));\n    data.non_eletti.forEach((e: any) => results[e.lista].push(Object.assign(e, { eletto: false })));\n\n    // get max rows count\n    const maxRows = Object.values(results).reduce((acc, prev) => acc < prev.length ? prev.length : acc, 0);\n\n    // generate tableRows\n    const tableRows = [];\n    for(let i = 0; i < maxRows; i++)  {\n      tableRows.push(\n        <tr key={`${props.anno}-${i}`}>\n          <td></td>\n          {Object.keys(results).map(l => \n            <td key={`${props.anno}-${l}-${i}`}>\n\n              {(results[l] && results[l][i]) ? (\n                [\n                  `${results[l][i].nominativo} (${results[l][i].voti})`,\n                  results[l][i].eletto ? (<img key={`coccarda-${i}`} src=\"coccarda.png\" alt=\"eletto\" width=\"16\" height=\"30\" className=\"float-right\" />) : ''\n                ]\n              ) : ''}\n\n            </td>\n          )}\n        </tr>\n      )\n    }\n\n    return tableRows;\n  }\n\n  function fix_names(name: string): string {\n    return name.replace('#', '')\n               .replace(/ /g, ' ')\n               .replace(/ /g, ' ')\n               .replace('ALLENZA UNIVERSITARIA', 'ALLEANZA UNIVERSITARIA')\n               .replace('NIKE  ‐  ARCADIA', 'ARCADIA - NIKE')\n               .replace('INGENERIATTIVA', 'INGEGNERIATTIVA')\n               .replace('LA FINESTRA  ‐  LIBERI DI SCEGLIERE', 'LA FINESTRA ‐ LIBERI DI SCEGLIERE')\n               .replace('LA FINESTRA‐LIBERI DI SCEGLIERE', 'LA FINESTRA ‐ LIBERI DI SCEGLIERE')\n               .replace('LIBERTAS LIBERI E FORTI', 'LIBERTAS')\n               .replace('NUOVA IBLA', 'NUOVAIBLA')\n               .replace('SANI LAB', 'SANILAB')\n               .replace('ECONOMIATTIVA', 'ECONOMIA ATTIVA')\n               .replace('WE LOVE UNICT/CREDIAMOCI', 'WE LOVE UNICT')\n               .replace('WE LOVE UNICT - ARES', 'WE LOVE UNICT')\n               .replace('PARTECIPA ‐ SOS GIURISTI', 'PARTECIPA')\n               .replace('ARCADIA ‐ REVOLUTION', 'ARCADIA REVOLUTION')\n               .replace('UDU - UNIONE DEGLI UNIVERSITARI', 'UDU  ‐  UNIONE DEGLI UNIVERSITARI')\n               .replace(new RegExp(\"E'\", \"g\"), 'È')\n               .replace(new RegExp(\"A'\", \"g\"), 'À');\n  }\n\n  function generateHead(): JSX.Element {\n    return (\n        <thead>\n        <tr\n          onClick={toggleBody}\n          aria-controls=\"example-collapse-text\"\n          aria-expanded={show}\n        >\n          <th className=\"year\">{props.anno} </th>\n          { data.liste.map((l: any) =>\n          <th key={props.anno + '-lista-' + l.nome}>\n            <div className=\"logo\" key={props.anno + '-logo-' + l.nome}>\n              <img src={`loghi/${fix_names(l.nome)}.jpg`} width=\"80\" height=\"80\" alt={l.nome}></img>\n            </div>\n            <div className=\"sub-logo\" key={props.anno + '-name-' + l.nome}>\n              {l.nome} ({l.voti_totali})\n            </div>\n          </th>) }\n        </tr>\n      </thead>\n    );\n  }\n\n  function toggleBody(e: any) {\n    e.preventDefault();\n    setShow(!show);\n  }\n\n  useEffect(() => {}, [show]);\n\n  return (\n    <div className=\"Results\">\n      <div className=\"container-fluid\">\n\n        <div className=\"row\">\n          <div className=\"col-12\">\n            {/* <h2>Dipartimento: {data.dipartimento}</h2> */}\n\n            <div className={show ? 'invisible' : 'visible'}>\n              <Collapse in={!show}>\n                <Table striped bordered hover responsive className=\"liste\">\n                  {generateHead()}\n                </Table>\n              </Collapse>\n            </div>\n\n              <Collapse in={show}>\n                <div id=\"example-collapse-text\">\n                  <Table striped bordered hover className=\"liste\">\n                    {generateHead()}\n                    <tbody>\n                      {generateTableRows(data)}\n                    </tbody>\n                  </Table>\n                </div>\n              </Collapse>\n\n          </div>\n        </div>\n\n        <br />\n        <br />\n\n      </div>\n    </div>\n  );\n}\n\nexport default Results;\n","export const dipartimenti = [\n  'Agricoltura_alimentazione_e_ambiente',\n  'Chirurgia_generale_e_specialità_medico_chirurgiche',\n  'Economia_e_impresa',\n  'Fisica_e_astronomia',\n  'Giurisprudenza',\n  'Ingegneria_civile_e_architettura',\n  'Ingegneria_elettrica_elettronica_e_informatica',\n  'Matematica_e_informatica',\n  'Medicina_clinica_e_sperimentale',\n  'Scienze_biologiche_geologiche_e_ambientali',\n  'Scienze_biomediche_e_biotecnologiche',\n  'Scienze_chimiche',\n  'Scienze_del_farmaco',\n  'Scienze_della_formazione',\n  'Scienze_mediche_chirurgiche_tecn_avanzate_GF_Ingrassia',\n  'Scienze_politiche_e_sociali',\n  'Scienze_umanistiche',\n  'Struttura_didattica_speciale_di_architettura',\n  'Struttura_didattica_speciale_di_lingue_e_letterature_straniere',\n];\n","import React, { FunctionComponent } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport './App.scss';\nimport Menu from './navbar/Navbar';\nimport Results from './results/Results';\nimport { dipartimenti } from '../data/dipartimenti';\n\nconst App: FunctionComponent = () => {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Menu />\n        <Switch>\n          <Route path=\"/senato\">\n            <h2 className=\"mt-5\">Senato</h2>\n            <br />\n            <Results anno=\"2018-2020\" path=\"Senato\" />\n            <Results anno=\"2016-2018\" path=\"Senato\" />\n          </Route>\n          <Route path=\"/cda\">\n            <h2 className=\"mt-5\">Consiglio di Amministrazione</h2>\n            <br />\n            <Results anno=\"2018-2020\" path=\"Consiglio_di_amministrazione\" />\n            <Results anno=\"2016-2018\" path=\"Consiglio_di_amministrazione\" />\n          </Route>\n          <Route path=\"/dipartimenti\">\n            <h2 className=\"mt-5\">Dipartimenti</h2>\n            <br />\n            {dipartimenti.map(d => [\n              <h3>{d.replace(/_/g, ' ')}</h3>,\n              <Results anno=\"2018-2020\" path={`dipartimenti/${d}`} />,\n              <Results anno=\"2016-2018\" path={`dipartimenti/${d}`} />\n            ])}\n          </Route>\n          <Route path=\"/not-found\">\n            <NotFound />\n          </Route>\n          <Redirect to='/senato' />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nfunction NotFound() {\n  return <h2>404 - Not Found</h2>;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}