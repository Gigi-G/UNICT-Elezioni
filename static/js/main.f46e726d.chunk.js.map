{"version":3,"sources":["data sync /^/.//.*/.json$","app/navbar/Navbar.tsx","app/results/Results.tsx","app/App.tsx","serviceWorker.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Navbar","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","target","rel","icon","faGithub","Results","props","data","require","anno","path","useState","show","setShow","generateHead","onClick","toggleBody","liste","l","key","nome","src","replace","width","height","alt","voti_totali","preventDefault","useEffect","Collapse","in","Table","striped","bordered","hover","results","forEach","eletti","lista","push","assign","eletto","non_eletti","maxRows","values","reduce","acc","prev","length","tableRows","i","nominativo","voti","generateTableRows","NotFound","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f46e726d.chunk.js","sourcesContent":["var map = {\n\t\"./2016-2018/Consiglio_di_amministrazione.json\": 41,\n\t\"./2016-2018/Senato.json\": 42,\n\t\"./2016-2018/dipartimenti/Agricoltura_alimentazione_e_ambiente.json\": 43,\n\t\"./2016-2018/dipartimenti/Chirurgia_generale_e_specialità_medico-chirurgiche.json\": 44,\n\t\"./2016-2018/dipartimenti/Economia_e_impresa.json\": 45,\n\t\"./2016-2018/dipartimenti/Fisica_e_astronomia.json\": 46,\n\t\"./2016-2018/dipartimenti/Giurisprudenza.json\": 47,\n\t\"./2016-2018/dipartimenti/Ingegneria_civile_e_architettura.json\": 48,\n\t\"./2016-2018/dipartimenti/Ingegneria_elettrica_elettronica_e_informatica.json\": 49,\n\t\"./2016-2018/dipartimenti/Matematica_e_informatica.json\": 50,\n\t\"./2016-2018/dipartimenti/Medicina_clinica_e_sperimentale.json\": 51,\n\t\"./2016-2018/dipartimenti/Scienze_biologiche_geologiche_e_ambientali.json\": 52,\n\t\"./2016-2018/dipartimenti/Scienze_biomediche_e_biotecnologiche.json\": 53,\n\t\"./2016-2018/dipartimenti/Scienze_chimiche.json\": 54,\n\t\"./2016-2018/dipartimenti/Scienze_del_farmaco.json\": 55,\n\t\"./2016-2018/dipartimenti/Scienze_della_formazione.json\": 56,\n\t\"./2016-2018/dipartimenti/Scienze_mediche_chirurgiche_tecn_avanzate_GF_Ingrassia.json\": 57,\n\t\"./2016-2018/dipartimenti/Scienze_politiche_e_sociali.json\": 58,\n\t\"./2016-2018/dipartimenti/Scienze_umanistiche.json\": 59,\n\t\"./2016-2018/dipartimenti/Struttura_didattica_speciale_di_architettura.json\": 60,\n\t\"./2016-2018/dipartimenti/Struttura_didattica_speciale_di_lingue_e_letterature_straniere.json\": 61,\n\t\"./2018-2020/Consiglio_di_amministrazione.json\": 62,\n\t\"./2018-2020/Senato.json\": 63,\n\t\"./2018-2020/dipartimenti/Agricoltura_alimentazione_e_ambiente.json\": 64,\n\t\"./2018-2020/dipartimenti/Chirurgia_generale_e_specialità_medico_chirurgiche.json\": 65,\n\t\"./2018-2020/dipartimenti/Economia_e_impresa.json\": 66,\n\t\"./2018-2020/dipartimenti/Fisica_e_astronomia.json\": 67,\n\t\"./2018-2020/dipartimenti/Giurisprudenza.json\": 68,\n\t\"./2018-2020/dipartimenti/Ingegneria_civile_e_architettura.json\": 69,\n\t\"./2018-2020/dipartimenti/Ingegneria_elettrica_elettronica_e_informatica.json\": 70,\n\t\"./2018-2020/dipartimenti/Matematica_e_informatica.json\": 71,\n\t\"./2018-2020/dipartimenti/Medicina_clinica_e_sperimentale.json\": 72,\n\t\"./2018-2020/dipartimenti/Scienze_biologiche_geologiche_e_ambientali.json\": 73,\n\t\"./2018-2020/dipartimenti/Scienze_biomediche_e_biotecnologiche.json\": 74,\n\t\"./2018-2020/dipartimenti/Scienze_chimiche.json\": 75,\n\t\"./2018-2020/dipartimenti/Scienze_del_farmaco.json\": 76,\n\t\"./2018-2020/dipartimenti/Scienze_della_formazione.json\": 77,\n\t\"./2018-2020/dipartimenti/Scienze_mediche_chirurgiche_tecn_avanzate_GF_Ingrassia.json\": 78,\n\t\"./2018-2020/dipartimenti/Scienze_politiche_e_sociali.json\": 79,\n\t\"./2018-2020/dipartimenti/Scienze_umanistiche.json\": 80,\n\t\"./2018-2020/dipartimenti/Struttura_didattica_speciale_di_architettura.json\": 81,\n\t\"./2018-2020/dipartimenti/Struttura_didattica_speciale_di_lingue_e_letterature_straniere.json\": 82\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 40;","import React, { FunctionComponent } from 'react';\nimport './Navbar.scss';\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Link } from 'react-router-dom';\n\nconst Navbar: FunctionComponent = () => {\n  return (\n    <div className=\"Navbar\">\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n        <div className=\"container\">\n          <a className=\"navbar-brand\" href=\"#unict-elezioni\">UNICT-Elezioni</a>\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor01\" aria-controls=\"navbarColor01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarColor01\">\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/senato\">Senato</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/cda\">Consiglio di Amministrazione</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/dipartimenti\">Dipartimenti</Link>\n              </li>\n            </ul>\n            <div className=\"navbar-nav mr-auto\"></div>\n            <a href=\"https://github.com/UNICT-DMI/UNICT-elezioni\" target=\"_blank\" rel=\"noopener noreferrer\">\n              <span className=\"text-white\">GitHub</span>\n              <button className=\"btn-empty\">\n                <FontAwesomeIcon icon={faGithub} />\n              </button>\n            </a>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n}\n\nexport default Navbar;\n","import React, { useEffect, useState } from 'react';\nimport './Results.scss';\nimport Collapse from 'react-bootstrap/Collapse';\nimport Table from 'react-bootstrap/Table';\n\ninterface Props {\n  anno?: string;\n  path?: string;\n}\n\nconst Results = (props: Props) => {\n  const data = require(`../../data/${props.anno}/${props.path}.json`);\n  const [show, setShow] = useState(false);\n\n  function generateTableRows(data: any): JSX.Element[] {\n\n    // init results\n    const results: { [key: string]: any[] } = {}; // any -> eletti[]\n\n    data.liste.forEach((l: any) => results[l.nome] = []);\n    data.eletti.forEach((e: any) => results[e.lista].push(Object.assign(e, { eletto: true })));\n    data.non_eletti.forEach((e: any) => results[e.lista].push(Object.assign(e, { eletto: false })));\n\n    // get max rows count\n    const maxRows = Object.values(results).reduce((acc, prev) => acc < prev.length ? prev.length : acc, 0);\n\n    // generate tableRows\n    const tableRows = [];\n    for(let i = 0; i < maxRows; i++)  {\n      tableRows.push(\n        <tr key={`${props.anno}-${i}`}>\n          <td></td>\n          {Object.keys(results).map(l => \n            <td key={`${props.anno}-${l}-${i}`}>\n\n              {(results[l] && results[l][i]) ? (\n                [\n                  `${results[l][i].nominativo} (${results[l][i].voti})`,\n                  results[l][i].eletto ? (<img key={`coccarda-${i}`} src=\"./coccarda.png\" alt=\"eletto\" width=\"16\" height=\"30\" className=\"float-right\" />) : ''\n                ]\n              ) : ''}\n\n            </td>\n          )}\n        </tr>\n      )\n    }\n\n    return tableRows;\n  }\n\n  function generateHead(): JSX.Element {\n    return (\n        <thead>\n        <tr\n          onClick={toggleBody}\n          aria-controls=\"example-collapse-text\"\n          aria-expanded={show}\n        >\n          <th className=\"year\">{props.anno} </th>\n          { data.liste.map((l: any) =>\n          <th key={props.anno + '-lista-' + l.nome}>\n            <img src={`loghi/${l.nome.replace('#', '')}.jpg`} width=\"80\" height=\"80\" alt={l.nome}></img>\n            <p></p>\n            {l.nome} ({l.voti_totali})\n          </th>) }\n        </tr>\n      </thead>\n    );\n  }\n\n  function toggleBody(e: any) {\n    e.preventDefault();\n    setShow(!show);\n  }\n\n  useEffect(() => {}, [show]);\n\n  return (\n    <div className=\"Results\">\n      <div className=\"container-fluid\">\n\n        <div className=\"row\">\n          <div className=\"col-12\">\n            {/* <h2>Dipartimento: {data.dipartimento}</h2> */}\n\n            <div className={show ? 'invisible' : 'visible'}>\n              <Collapse in={!show}>\n                <Table striped bordered hover className=\"liste mt-4\">\n                  {generateHead()}\n                </Table>\n              </Collapse>\n            </div>\n\n              <Collapse in={show}>\n                <div id=\"example-collapse-text\">\n                  <Table striped bordered hover className=\"liste mt-4\">\n                    {generateHead()}\n                    <tbody>\n                      {generateTableRows(data)}\n                    </tbody>\n                  </Table>\n                </div>\n              </Collapse>\n\n          </div>\n        </div>\n\n        <br />\n        <br />\n\n      </div>\n    </div>\n  );\n}\n\nexport default Results;\n","import React, { FunctionComponent } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport './App.scss';\nimport Navbar from './navbar/Navbar';\nimport Results from './results/Results';\n\nconst App: FunctionComponent = () => {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route path=\"/senato\">\n            <Results anno=\"2018-2020\" path=\"Senato\" />\n            <Results anno=\"2016-2018\" path=\"Senato\" />\n          </Route>\n          <Route path=\"/cda\">\n            <Results anno=\"2018-2020\" path=\"Consiglio_di_amministrazione\" />\n            <Results anno=\"2016-2018\" path=\"Consiglio_di_amministrazione\" />\n          </Route>\n          <Route path=\"/dipartimenti\">\n            <Results anno=\"2018-2020\" path=\"dipartimenti/Matematica_e_informatica\" />\n            <Results anno=\"2016-2018\" path=\"dipartimenti/Matematica_e_informatica\" />\n          </Route>\n          <Route path=\"/not-found\">\n            <NotFound />\n          </Route>\n          <Redirect to='/not-found' />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nfunction NotFound() {\n  return <h2>404 - Not Found</h2>;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}